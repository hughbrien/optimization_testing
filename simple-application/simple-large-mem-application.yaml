apiVersion: v1
kind: Namespace
metadata:
  name: optimization-single-application
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: komodor-python-script
  namespace: optimization-single-application
data:
  python-script: |-
    import time
    import os
    import sys
    import logging
    logging.basicConfig(stream=sys.stdout, level=logging.INFO)
    
    GLOBAL_VARIABLE = []

    exit_code = int(os.getenv('EXIT_CODE')) if os.getenv('EXIT_CODE') else 0

    def start_service():
        initialize_connections()

    def initialize_connections():
        fetch_configuration()

    def fetch_configuration():
        create_connection()

    def create_connection():
        conn_auth()

    def conn_auth():
      if exit_code == 0:
        logging.info("connection established")
      else:
        raise Exception("Can't perform the requested task - authentication error")

    def prealloc_array_by_appending():
        size = 30000000
        result = []
        for i in range(size):
            item_value = "Hugh Brien LARGE BLOCKS OF TEXT THAT 444332222 MAY NOT BE OPTIMIZED xmcmcmcjeodkaadalsdfjiri594844321223449686857474747 " + str(i)
            print(item_value)
            result.append(None)
            result.append(item_value)

    start_service()
    while True:
        logging.info("service loop")
        GLOBAL_VARIABLE = prealloc_array_by_appending()
        time.sleep(10)


---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: optimization-single-application
  annotations:
    app: simple-large-mem-application
  labels:
    app: simple-large-mem-application
  name: simple-large-mem-application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simple-large-mem-application
  template:
    metadata:
      labels:
        app: simple-large-mem-application
    spec:
      containers:
      - env:
        - name: LOG_LEVEL
          value: "INFO"
        - name: EXIT_CODE
          value: "0"
        image: python:3.11-alpine
        name: python
        command: ["python"]
        args: ["/usr/share/app/code.py"]
        resources:
          requests:
            cpu: 500m
            memory: "512Mi"
          limits:
            cpu: 500m
            memory: "1Gi"
        volumeMounts:
          - name: komodor-python-script
            mountPath: /usr/share/app/code.py
            subPath: python-script
      volumes:
      - name: komodor-python-script
        configMap:
          name: komodor-python-script
