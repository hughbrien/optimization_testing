apiVersion: v1
kind: ConfigMap
metadata:
  name: komodor-python-script
data:
  python-script: |-
    import time
    import os
    import sys
    import logging
    logging.basicConfig(stream=sys.stdout, level=logging.INFO)

    exit_code = int(os.getenv('EXIT_CODE')) if os.getenv('EXIT_CODE') else 0

    def start_service():
        initialize_connections()

    def initialize_connections():
        fetch_configuration()

    def fetch_configuration():
        create_connection()

    def create_connection():
        conn_auth()

    def conn_auth():
      if exit_code == 0:
        logging.info("connection established")
      else:
        raise Exception("Can't perform the requested task - authentication error")

    time.sleep(10)
    start_service()
    while True:
        logging.info("service loop")
        time.sleep(10)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app: komo-application-error
  labels:
    app: komo-application-error
  name: komo-application-error
spec:
  replicas: 1
  selector:
    matchLabels:
      app: komo-application-error
  template:
    metadata:
      labels:
        app: komo-application-error
    spec:
      containers:
      - env:
        - name: LOG_LEVEL
          value: "INFO"
        - name: EXIT_CODE
          value: "0"
        image: python:3.11-alpine
        name: python
        command: ["python"]
        args: ["/usr/share/app/code.py"]
        volumeMounts:
          - name: komodor-python-script
            mountPath: /usr/share/app/code.py
            subPath: python-script
      volumes:
      - name: komodor-python-script
        configMap:
          name: komodor-python-script
